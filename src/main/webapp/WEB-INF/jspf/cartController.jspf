<%-- any content can be specified here e.g.: --%>
<%@page import="com.cupcakes.logic.DTO.LineItemsDTO"%>
<%@page import="java.sql.SQLException"%>
<%@page import="com.cupcakes.logic.DTO.BottomDTO"%>
<%@page import="com.cupcakes.logic.DTO.ToppingsDTO"%>
<%@page import="com.cupcakes.logic.DTO.ToppingsDTO"%>
<%@page import="com.cupcakes.logic.DTO.CupcakeDTO"%>
<%@page import="com.cupcakes.logic.DTO.UserDTO"%>
<%@page import="com.cupcakes.logic.DTO.ShoppingCart"%>
<%@page import="java.util.Enumeration"%>
<%@page import="com.cupcakes.logic.Controller"%>
<%@ page pageEncoding="UTF-8" %>
<%
            Controller cc = new Controller();

            String topping = null;
            String bottom = null;
            int quantity = 0;
            Enumeration params = request.getParameterNames();
            
            session = request.getSession();
            UserDTO user = (UserDTO) session.getAttribute("user");
            ShoppingCart cart = (ShoppingCart) session.getAttribute("cart");

            while (params.hasMoreElements()) {
                String paramName = (String) params.nextElement();
                String paramValue = request.getParameter(paramName);

                /**
                 * Check that there's no default values passed on
                 */
                if (paramValue.equals("Top")
                        || paramValue.equals("Bottom")
                        || paramValue.equals("Number")) {
                    request.getRequestDispatcher("/index.jsp").forward(request, response);
                    return;
                }
                switch (paramName) {
                    case "Toppings":
                        topping = paramValue;
                        break;

                    case "Bottoms":
                        bottom = paramValue;
                        break;

                    case "quantity":
                        quantity = Integer.parseInt(paramValue);
                        break;

                    case "deal":
                        if (paramValue != null || !paramValue.isEmpty()) {
                            if (paramValue.equals("save")) {
                                cc.putCartInDB(cart, user);
                                request.getRequestDispatcher("/index.jsp").forward(request, response);
                            }
                            else if(paramValue.equals("cancel"))
                            {
                                cc.cancelOrder();
                                request.getRequestDispatcher("/index.jsp").forward(request, response);
                            }
                        }
                        break;

                    default:
                        break;
                }
            }

            /**
             * henter cart objektet fra session eller laver et hvis det ikke
             * eksisterer
             */
            if (cart == null) {
                cart = new ShoppingCart();

            }

            //
            /**
             * hvis der er parameter værdier så laves et nye ShoppingCart "cart"
             * objekt. OBS invoice_id værdi opfundet til lejligheden
             */
            if (topping != null && !topping.isEmpty()
                    && bottom != null && !topping.isEmpty()
                    && quantity != 0) {

                /**
                 * Add to list of lineitems if not duplicate. Quantity is added
                 * to lineitem if duplicate
                 */
                CupcakeDTO cake = new CupcakeDTO(
                        new ToppingsDTO(topping),
                        new BottomDTO(bottom));
                if (cc.isCupCakeDuplicate(cart, cake, quantity)) {
                    out.println("Kages antal opdateret i lineitems liste");
                } else {
//                    try {
//                        user = cc.fetchUser("bittie_bertha");
//                    } catch (SQLException ex) {
//                        System.out.println("Kunne ikke finde user: " + ex);
//                    }

                    cart.addLineItem(new LineItemsDTO(cake, quantity, cc.getInvoiceID()));
                    out.println("Ny kage tilføjet");
                }

                session.setAttribute("cart", cart);
                session.setAttribute("user", user);
            }

        %>
